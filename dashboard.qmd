---
title: "Wingspan Data"
author: "Noah Bolohan"
format: dashboard
---

```{r "imports"}
library(tidyverse)
library(gt)

invisible(
    lapply(
        list.files(
            "./R",
            full.names = TRUE
        ),
        source
    )
)
```

```{r "Download Google Sheet"}
wingspan_scores <- get_google_sheet(
  sheetId = 2096833443
)

wingspan_scores <- wingspan_scores |>
    mutate(
        game = 1:nrow(
            wingspan_scores
        ),
        .before = 1
    )
```

```{r "Stacked player score"}
stacked_player_scores_R <- lapply(
        1:7,
        iterative_pivot,
        df = wingspan_scores
    ) |> 
    bind_rows() |>
    drop_na() |>
    group_by(game) |>
    mutate(
        winner = case_when(
        score >= max(score, na.rm = TRUE) ~ TRUE,
        .default = FALSE
        )
    ) |>
    ungroup() |>
    arrange(
        game
    )

rows <- lapply(
    seq_len(
        nrow(stacked_player_scores_R)
    ),
    function(i) as.list(
        stacked_player_scores_R[i, ]
    )
)

ojs_define(data = rows)
```


Last updated: `{r} now(tzone="America/New_York")`

## {.toolbar}

```{ojs}
viewof name = Inputs.select(
    [
        "Alex",
        "Mila",
        "Joey",
        "Noah",
        "Rambouillet",
        "Meadow"
    ],
    {
        value: "Alex",
        label: "Name"
    }
)
```

```{ojs}
//| output: false

filtered_total = data.filter(function(df) {
  return df.Name == name && df.score_type == "total_score";
})

filtered_non_total = data.filter(function(df) {
  return df.Name == name && df.score_type != "total_score";
})
```

## Plot

```{ojs}
Plot.plot(
    {
        marks: [
            Plot.line(
                filtered_total, 
                {
                    x: "game",
                    y: "score"
                }, 
                {
                    stroke: "black"
                }
            )
        ]
    }
)
```

## Data

```{ojs}
Inputs.table(
    filtered_total
)
```